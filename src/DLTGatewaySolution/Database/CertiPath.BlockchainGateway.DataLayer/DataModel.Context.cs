//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CertiPath.BlockchainGateway.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataModelContainer : DbContext
    {
        public DataModelContainer()
            : base("name=DataModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BlockchainFramework> BlockchainFramework { get; set; }
        public virtual DbSet<BusinessNetwork> BusinessNetwork { get; set; }
        public virtual DbSet<BusinessNetworkNamespace> BusinessNetworkNamespace { get; set; }
        public virtual DbSet<BusinessNetworkObject> BusinessNetworkObject { get; set; }
        public virtual DbSet<TransactionHistory> TransactionHistory { get; set; }
        public virtual DbSet<DataStore> DataStore { get; set; }
        public virtual DbSet<AuditLog> AuditLog { get; set; }
        public virtual DbSet<vDataStore> vDataStore { get; set; }
        public virtual DbSet<vNamespaceTransactionsPerDay> vNamespaceTransactionsPerDay { get; set; }
        public virtual DbSet<vBusinessNetworkNamespace> vBusinessNetworkNamespace { get; set; }
        public virtual DbSet<vBusinessNetworkObject> vBusinessNetworkObject { get; set; }
        public virtual DbSet<vNamespaceAndObjectTree> vNamespaceAndObjectTree { get; set; }
        public virtual DbSet<Setting> Setting { get; set; }
        public virtual DbSet<SettingType> SettingType { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Policy> Policy { get; set; }
        public virtual DbSet<PolicyType> PolicyType { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Role_Policy> Role_Policy { get; set; }
        public virtual DbSet<Role_UserGroup> Role_UserGroup { get; set; }
        public virtual DbSet<User_UserGroup> User_UserGroup { get; set; }
        public virtual DbSet<BusinessNetwork_FileUpload> BusinessNetwork_FileUpload { get; set; }
        public virtual DbSet<FileUpload> FileUpload { get; set; }
        public virtual DbSet<vBusinessNetworkFile> vBusinessNetworkFile { get; set; }
        public virtual DbSet<BusinessNetworkObjectProperty> BusinessNetworkObjectProperty { get; set; }
        public virtual DbSet<ObjectPropertyType> ObjectPropertyType { get; set; }
        public virtual DbSet<DataStoreHistory> DataStoreHistory { get; set; }
    
        public virtual ObjectResult<GetSystemStats_Result> GetSystemStats(Nullable<int> offsetHours)
        {
            var offsetHoursParameter = offsetHours.HasValue ?
                new ObjectParameter("offsetHours", offsetHours) :
                new ObjectParameter("offsetHours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSystemStats_Result>("GetSystemStats", offsetHoursParameter);
        }
    }
}
